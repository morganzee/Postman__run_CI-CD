{
	"info": {
		"_postman_id": "6f73a9f0-ea28-410e-b99a-9c401c38f27d",
		"name": "Platzi Fake Store API",
		"description": "This collection was gotten from Platzi fake store, you can download that from the link below to carry out personla test .\n\n[https://fakeapi.platzi.com/en/resources/postman/](https://fakeapi.platzi.com/en/resources/postman/)\n\n1. How to Run Postman Collection without Newman in the CI/CD pipelineEndFragment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16041241",
		"_collection_link": "https://www.postman.com/speeding-station-966283/workspace/personal-project/collection/16041241-6f73a9f0-ea28-410e-b99a-9c401c38f27d?action=share&source=collection_link&creator=16041241"
	},
	"item": [
		{
			"name": "Rest API",
			"item": [
				{
					"name": "products",
					"item": [
						{
							"name": "getAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Price should be a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    \r",
											"    responseData.forEach(function(product) {\r",
											"        pm.expect(product.price).to.be.a('number').and.to.satisfy(price => price >= 0, \"Price should be a non-negative number\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Images array should not be empty\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('array');\r",
											"  responseData.forEach(function(product) {\r",
											"    pm.expect(product.images).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Images array should not be empty\");\r",
											"  });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Category has the required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(product) {\r",
											"        pm.expect(product.category).to.be.an('object');\r",
											"        pm.expect(product.category.id).to.exist;\r",
											"        pm.expect(product.category.name).to.exist;\r",
											"        pm.expect(product.category.image).to.exist;\r",
											"        pm.expect(product.category.creationAt).to.exist;\r",
											"        pm.expect(product.category.updatedAt).to.exist;\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/products/",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"products",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "getOne",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData).to.have.property('path');\r",
											"    pm.expect(responseData).to.have.property('timestamp');\r",
											"    pm.expect(responseData).to.have.property('name');\r",
											"    pm.expect(responseData).to.have.property('message');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Timestamp is in a valid date format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.timestamp).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/, \"Timestamp should be in valid date format\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Path should not be empty\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.path).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Message is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/products/120",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"products",
										"120"
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"New Product\",\r\n    \"price\": 10,\r\n    \"description\": \"A description\",\r\n    \"categoryId\": 1,\r\n    \"images\": [\r\n        \"https://placeimg.com/640/480/any\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/products/",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"products",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Change title\",\r\n    \"price\": 100,\r\n    \"images\": [\r\n        \"https://placeimg.com/640/480/any\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/products/1",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"products",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "pagination",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/products/?offset=0&limit=10",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"products",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "getAll",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/categories/",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"categories",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "getOne",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/categories/1",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"categories",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"nuevo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/categories/1",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"categories",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Books\",\r\n  \"image\": \"https://api.lorem.space/image/book?w=150&h=220\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/categories/",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"categories",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "getAll",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/users/",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "getOne",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Email is in a valid format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.email).to.be.a('string').and.to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Email format is not valid\");",
											"});",
											"",
											"",
											"pm.test(\"Password is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.password).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Password should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/users/1",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"users",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Nicolas\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/users/1",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"users",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Nicolas\",\r\n\t\"email\": \"nico@gmail.com\",\r\n\t\"password\": \"123\",\r\n    \"avatar\": \"https://api.lorem.space/image/face?w=640&h=480\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/users/",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "isAvailable",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"maria@mail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/users/is-available",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"users",
										"is-available"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "login",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"john@mail.com\",\r\n\t\"password\": \"changeme\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/auth/login",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImpvaG5AbWFpbC5jb20iLCJzdWIiOjEsImlhdCI6MTY0OTg4MTQ2NiwiZXhwIjoxNjQ5ODg1MDY2fQ.yVveqqmu6u3lN2UK0McQcfU9-vh8T6iDb6y-mHPhyzA",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/auth/profile",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"profile"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "files",
					"item": [
						{
							"name": "upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 500\", function () {",
											"  pm.expect(pm.response.code).to.equal(500);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Response contains statusCode and message fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.have.property('statusCode');",
											"    pm.expect(responseData).to.have.property('message');",
											"});",
											"",
											"",
											"pm.test(\"StatusCode is a non-empty integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.statusCode).to.exist.and.to.be.a('number');",
											"});",
											"",
											"",
											"pm.test(\"Message is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/nicob/Downloads/Step3-graphic-1.png"
										}
									]
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/files/upload",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"files",
										"upload"
									]
								}
							},
							"response": []
						},
						{
							"name": "file",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/nicob/Downloads/Step3-graphic-1.png"
										}
									]
								},
								"url": {
									"raw": "https://api.escuelajs.co/api/v1/files/4c8b.png",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"api",
										"v1",
										"files",
										"4c8b.png"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "GraphQL",
			"item": [
				{
					"name": "products",
					"item": [
						{
							"name": "getAll",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n  products{\r\n\t\tid\r\n    title\r\n    price\r\n\t\tdescription\r\n\t\timages\r\n\t\tcategory {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\timage\r\n\t\t}\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "getOne",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n\tproduct(id: \"120\") {\r\n\t\ttitle\r\n\t\tprice\r\n\t\timages\r\n\t\tcategory {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\timage\r\n\t\t}\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\taddProduct(\r\n\t\tdata: {\r\n\t\t\ttitle: \"New Product\"\r\n\t\t\tprice: 10\r\n\t\t\tdescription: \"A description\"\r\n\t\t\tcategoryId: 1\r\n\t\t\timages: [\"https://placeimg.com/640/480/any\"]\r\n\t\t}\r\n\t) {\r\n\t\ttitle\r\n\t\tprice\r\n\t\timages\r\n\t\tcategory {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\timage\r\n\t\t}\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tupdateProduct(id: \"120\", changes: { title: \"udpate\" }) {\r\n\t\ttitle\r\n\t\tprice\r\n\t\timages\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tdeleteProduct(id: 112)\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "pagination",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n  products(limit: 2, offset: 0){\r\n    title\r\n    price\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "by title",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n  products(title: \"Generic\"){\r\n    title\r\n    price\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "by range price",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n\tproducts(price_min: 100, price_max: 200) {\r\n\t\ttitle\r\n\t\tprice\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "by category",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n\tproducts(title: \"Generic\", categoryId: 1, price_min: 100, price_max: 1000) {\r\n\t\ttitle\r\n\t\tprice\r\n\t\tcategory {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t}\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "getAll",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n  categories{\r\n\t\tid\r\n\t\tname\r\n\t\timage\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "getOne",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n  category(id: 1){\r\n\t\tid\r\n\t\tname\r\n\t\timage\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\taddCategory(\r\n\t\tdata: { name: \"New Category\", image: \"https://placeimg.com/640/480/any\" }\r\n\t) {\r\n\t\tid\r\n\t\tname\r\n\t\timage\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tupdateCategory(id: 1, changes: { name: \"change\" }) {\r\n\t\tid\r\n\t\tname\r\n\t\timage\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tdeleteCategory(id: 14)\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "getAll",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n  users{\r\n\t\tid\r\n\t\tname\r\n\t\temail\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "getOne",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n  user(id: 1){\r\n\t\tid\r\n\t\tname\r\n\t\tavatar\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\taddUser(\r\n\t\tdata: {\r\n\t\t\tname: \"Nicolas\"\r\n\t\t\temail: \"nico@gmail.com\"\r\n\t\t\tpassword: \"1234\"\r\n\t\t\tavatar: \"https://api.lorem.space/image/face?w=150&h=220\"\r\n\t\t}\r\n\t) {\r\n\t\tid\r\n\t\tname\r\n\t\tavatar\r\n\t}\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tupdateUser(id: 1, changes: { name: \"change\" }) {\r\n\t\tid\r\n\t\tname\r\n\t\tavatar\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "isAvailable",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n\tisAvailable(email: \"john@mail.com\")\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tdeleteUser(id: 1)\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "login",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tlogin(email: \"john@mail.com\", password: \"changeme\") {\r\n\t\taccess_token\r\n\t\trefresh_token\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "myProfile",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImlhdCI6MTY3Mjc4MDE1OCwiZXhwIjoxNjc0NTA4MTU4fQ._UdU1WdRNaLW1sow633WEhKdxmdiFsJen-J2pjKgqu8",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n\tmyProfile {\r\n\t\tid\r\n\t\tname\r\n\t\tavatar\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "refreshToken",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\trefreshToken(\r\n\t\trefreshToken: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImlhdCI6MTY3Mjc3ODY4MywiZXhwIjoxNjcyODE0NjgzfQ.XMjQQ6tTHAvy2ELrsYN0enWcQTo0PTeqb46-OrhUK7o\"\r\n\t) {\r\n\t\taccess_token\r\n\t\trefresh_token\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "https://api.escuelajs.co/graphql",
									"protocol": "https",
									"host": [
										"api",
										"escuelajs",
										"co"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}
